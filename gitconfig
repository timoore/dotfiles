[merge]
	conflictstyle = diff3
[color]
	ui = true
[alias]
        ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%C(cyan)\\ [%an]" --decorate
        ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%C(cyan)\\ [%an]" --decorate --numstat
        le = log --oneline --decorate
        tl = rev-parse --show-toplevel
        f = "!git ls-files | grep -i"
        ff = "!f() { TOPLEVEL=$(git rev-parse --show-toplevel); git ls-files | sed -ne\"\\?$1?Is?^?$TOPLEVEL/?p\"; }; f"
        ours = "!f() { cd $GIT_PREFIX && git co --ours $@ && git add $@; }; f"
        theirs = "!f() { cd $GIT_PREFIX && git co --theirs $@ && git add $@; }; f"
        gra = "!f() { TOPLEVEL=$(git rev-parse --show-toplevel); git grep --full-name -In \"$@\" | sed -e\"s?^?$TOPLEVEL/?\"; }; f"
        graphviz = "!f() { echo 'digraph git {' ; git log --pretty='format:  %h -> { %p }' \"$@\" | sed 's/[0-9a-f][0-9a-f]*/\"&\"/g' ; echo '}'; }; f"
        graph2 = "!f() { echo 'digraph git { edge [dir=none]' ; git log --pretty='format:  \"%h\" [label=\"%s\"]' \"$@\"; git log --pretty='format:  %h -> { %p }' \"$@\" | sed 's/[0-9a-f][0-9a-f]*/\"&\"/g'; echo '}'; }; f"
        grac = "!f() { TOPLEVEL=$(git rev-parse --show-toplevel); git grep --full-name -In \"$@\" -- '*.h' '*.cxx' | sed -e\"s?^?$TOPLEVEL/?\"; }; f"
        poh = push origin HEAD
